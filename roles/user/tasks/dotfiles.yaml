---
- name: Check for dotfiles directory
  stat:
    path: "/home/{{ username }}/.dotfiles"
  register: dotfiles_check

- name: Installing Required Packages for Dotfiles
  pacman:
    name: "{{ item }}"
    state: present
  loop: "{{ dotfiles_packages }}"
  become: true

- name: Check for X11/Wayland Session
  shell: "ps aux | grep [w]ayland"
  become: no
  failed_when: "wayland_ps == 2"
  register: wayland_ps
  changed_when: false

- name: Installing X11 specific packages for Dotfiles
  pacman:
    name: "{{ item }}"
    state: present
  loop: "{{ dotfiles_packages_x11 }}"
  when: wayland_ps != 0

- name: Installing Wayland specific packages for Dotfiles
  pacman:
    name: "{{ item }}"
    state: present
  loop: "{{ dotfiles_packages_wayland }}"
  when: wayland_ps == 0

- name: Git clone .dotfiles
  git:
    dest: "/home/{{ username }}/.dotfiles"
    repo: "{{ dotfiles_repo }}"
  when: (dotfiles_check.stat.isdir is false) or (dotfiles_check.stat.exists is false)

- name: Install dotfiles
  shell: 'cd /home/{{ username }} && STOW_FOLDERS="nvim,tmux,zsh,alacritty" ./.dotfiles/install'
  become: no
  args:
    executable: "/bin/bash"

- name: Check for oh-my-zsh
  stat:
    path: "/home/{{ username }}/.oh-my-zsh"
  register: ohmyzsh_check

- name: Install oh-my-zsh
  shell: 'sh -c "$(curl -fsSL {{ oh_my_zsh_url }})"'
  become: no
  args:
    executable: "/bin/bash"
  when: ohmyzsh_check.stat.exists is false

---
- name: Get User
  set_fact:
    home_user: "{{ lookup('env', 'USER') }}"

- name: Check for Nvidia Card
  shell: 'lspci -k | grep -A 2 -E "(VGA|3D)"'
  become: no
  failed_when: "nvidia_check == 2"
  register: nvidia_check
  changed_when: false

- name: Set Parallel Compilation in pacman.conf
  shell: 'sed -i -E "s/^#(ParallelDownloads.+)/\1/" {{ pacman_config }}'
  become: yes

- name: Set MAKEFLAGS
  shell: 'sed -E "s/^#(MAKEFLAGS=\"-j).+/\1\$\(nproc\)\"/" {{ makepkg_config }}'
  become: yes

- name: Pacman Updates
  pacman:
    update_cache: yes
    upgrade: yes
  become: true

- name: Set Base Apps to Install
  set_fact:
    pacman_combined_apps: "{{ pacman_core_apps + terminal_apps + web_browsers_apps + media_apps  + graphic_apps + communication_apps + dev_apps }}"

- name: Add Nvidia Packages
  set_fact:
    pacman_combined_apps: "{{ pacman_combined_apps + nvidia_apps }}"
  when: "nvidia_enabled == true"

- name: Combine with Graphics Card Apps
  set_fact:
    pacman_combined_apps: "{{ pacman_combined_apps + graphical_apps }}"
  when: "graphics_card_enabled == true"

- name: Combine with Virtualized Development Apps
  set_fact:
    pacman_combined_apps: "{{ pacman_combined_apps + virt_apps }}"
  when: "virt_enabled == true"

- name: Combine with Audio/Video Editing Apps
  set_fact:
    pacman_combined_apps: "{{ pacman_combined_apps + av_edit_apps }}"
  when: "av_enabled == true"

- name: Install Apps (Pacman)
  pacman:
    name: "{{ item }}"
    state: present
  loop: "{{ pacman_combined_apps }}"
  become: true

- name: Enable libvirtd
  systemd:
    name: libvirtd
    enabled: true
    state: "started"
  become: true
  when: "virt_enabled == true"

- name: Configure Rootless KVM
  user:
    name: "{{ home_user }}"
    groups: "libvirt"
    append: true
  become: true
  when: "virt_enabled == true"

- name: Restart libvirtd
  systemd:
    name: libvirtd
    state: "restarted"
  when: "virt_enabled == true"
